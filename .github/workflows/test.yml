name: Phpunit test

on:
  push:
    branches: [ "coverage" ]
  pull_request:
    branches: [ "coverage" ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      PHP_EXTENSIONS: none, ctype, dom, json, libxml, mbstring, openssl, tokenizer, xml, xmlwriter, xdebug
      PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - "8.2"
          - "8.3"
          - "8.4"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: ${{ matrix.coverage-driver }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          tools: none

      - name: Install Dependencies
        run: composer install --prefer-dist ${{ matrix.composer-extra-arguments }}

      - name: Run Unit Tests
        run: ./vendor/phpunit/phpunit/phpunit --testsuite=unit

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: pcov
          extensions: uopz
          tools: pecl

      - name: Install Dependencies
        run: composer install --prefer-dist ${{ matrix.composer-extra-arguments }}

      - name: Generating Code Coverage Report
        run: ./vendor/phpunit/phpunit/phpunit --coverage-clover=coverage.xml

      - name: Send Code Coverage Report to Codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}